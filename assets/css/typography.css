.content {
  :where(h1):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-mt-2 sr-text-4xl sr-font-bold sr-tracking-tight sr-text-slate-900 dark:sr-text-slate-100;
  }
  :where(h2):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-font-semibold sr-tracking-tight sr-text-slate-900 dark:sr-text-slate-100 sr-mt-10 sr-border-b sr-pb-1 sr-text-3xl sr-border-neutral-200/70 contrast-more:sr-border-neutral-400 dark:sr-border-primary-100/10 contrast-more:dark:sr-border-neutral-400;
  }
  :where(h3):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-font-semibold sr-tracking-tight sr-text-slate-900 dark:sr-text-slate-100 sr-mt-8 sr-text-2xl;
  }
  :where(h4):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-font-semibold sr-tracking-tight sr-text-slate-900 dark:sr-text-slate-100 sr-mt-8 sr-text-xl;
  }
  :where(h5):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-font-semibold sr-tracking-tight sr-text-slate-900 dark:sr-text-slate-100 sr-mt-8 sr-text-lg;
  }
  :where(h6):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-font-semibold sr-tracking-tight sr-text-slate-900 dark:sr-text-slate-100 sr-mt-8 sr-text-base;
  }
  :where(p):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-mt-6 sr-leading-7 first:sr-mt-0;
  }
  :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-text-primary-600 sr-underline sr-decoration-from-font [text-underline-position:from-font];
  }
  :where(blockquote):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-mt-6 sr-border-gray-300 sr-italic sr-text-gray-700 dark:sr-border-gray-700 dark:sr-text-gray-400 first:sr-mt-0 ltr:sr-border-l-2 ltr:sr-pl-6 rtl:sr-border-r-2 rtl:sr-pr-6;
  }
  :where(pre):not(:where(.stacksr-code-block pre, [class~=not-prose],[class~=not-prose] *)) {
    @apply sr-bg-primary-700/5 sr-mb-4 sr-overflow-x-auto sr-rounded-xl sr-font-medium sr-subpixel-antialiased dark:sr-bg-primary-300/10 sr-text-[.9em] contrast-more:sr-border contrast-more:sr-border-primary-900/20 contrast-more:sr-contrast-150 contrast-more:dark:sr-border-primary-100/40 sr-py-4;
  }
  :where(code):not(:where(.stacksr-code-block code, [class~=not-prose],[class~=not-prose] *)) {
    @apply sr-border-black sr-border-opacity-[0.04] sr-bg-opacity-[0.03] sr-bg-black sr-break-words sr-rounded-md sr-border sr-py-0.5 sr-px-[.25em] sr-text-[.9em] dark:sr-border-white/10 dark:sr-bg-white/10;
  }
  :where(table):not(:where(.stacksr-code-block table, [class~=not-prose],[class~=not-prose] *)) {
    @apply sr-block sr-overflow-x-auto sr-mt-6 sr-p-0 first:sr-mt-0;

    tr {
      @apply sr-m-0 sr-border-t sr-border-gray-300 sr-p-0 dark:sr-border-gray-600 even:sr-bg-gray-100 even:dark:sr-bg-gray-600/20;
    }
    th {
      @apply sr-m-0 sr-border sr-border-gray-300 sr-px-4 sr-py-2 sr-font-semibold dark:sr-border-gray-600;
    }
    td {
      @apply sr-m-0 sr-border sr-border-gray-300 sr-px-4 sr-py-2 dark:sr-border-gray-600;
    }
  }
  :where(ol):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-mt-6 sr-list-decimal first:sr-mt-0 ltr:sr-ml-6 rtl:sr-mr-6;
    li {
      @apply sr-my-2;
    }
  }
  :where(ul):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-mt-6 sr-list-disc first:sr-mt-0 ltr:sr-ml-6 rtl:sr-mr-6;
    li {
      @apply sr-my-2;
    }
  }
  /* This CSS rule targets the first nested unordered (ul) or ordered (ol) list
     inside the list item (li) of any parent ul or ol.
     The rule sets the top margin of the selected list to zero. */
  :where(ul, ol) > li > :where(ul, ol):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-mt-0;
  }
  :where(kbd):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-border-black sr-border-opacity-[0.04] sr-bg-opacity-[0.03] sr-bg-black sr-break-words sr-rounded-md sr-border sr-py-0.5 sr-px-[.25em] sr-text-[.9em] dark:sr-border-white/10 dark:sr-bg-white/10;
  }
  :where(pre.mermaid):not(:where(.stacksr-code-block pre, [class~=not-prose],[class~=not-prose] *)) {
    @apply sr-bg-transparent sr-rounded-none dark:sr-bg-transparent;
  }
  :where(img):not(:where([class~=not-prose],[class~=not-prose] *)) {
    @apply sr-mx-auto sr-my-4 sr-rounded-md;
  }
  :where(figure):not(:where([class~=not-prose],[class~=not-prose] *)) {
    figcaption {
      @apply sr-text-sm sr-text-gray-500 dark:sr-text-gray-400 sr-mt-2 sr-block sr-text-center;
    }
  }
  /* Definition list */
  :where(dl):not(:where([class~=not-prose],[class~=not-prose] *)) {
    dt {
      @apply sr-mt-6 sr-font-semibold;
    }
    dd {
      @apply sr-my-2 sr-ps-6;
    }
  }
  .footnotes {
    @apply sr-mt-12 sr-text-sm;
  }
}

.subheading-anchor {
  @apply sr-opacity-0 sr-transition-opacity ltr:sr-ml-1 rtl:sr-mr-1;

  span:target + &,
  :hover > &,
  &:focus {
    @apply sr-opacity-100;
  }

  span + &,
  :hover > & {
    @apply !sr-no-underline;
  }

  &:after {
    @apply sr-content-['#'] sr-px-1;
    @apply sr-text-gray-300 dark:sr-text-neutral-700;
    span:target + & {
      @apply sr-text-gray-400;
      @apply dark:sr-text-neutral-500;
    }
  }
}

article details > summary {
  &::-webkit-details-marker {
    @apply sr-hidden;
  }
  &::before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' class='sr-h-5 sr-w-5' viewBox='0 0 20 20' fill='currentColor'%3E%3Cpath fill-rule='evenodd' d='M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z' clip-rule='evenodd' /%3E%3C/svg%3E");
    height: 1.2em;
    width: 1.2em;
    vertical-align: -4px;
    padding: 0 0.6em;
  }
}

:lang(fa) ol {
  list-style-type: persian;
}
